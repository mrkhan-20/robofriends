{"version":3,"sources":["Card.js","Cardlist.js","Searchbox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["card","name","email","id","className","src","alt","height","width","Cardlist","robots","map","user","i","Card","Searchbox","searchfield","searchchange","type","placeholder","onChange","Scroll","props","style","overflow","border","children","App","onSearchchange","event","setState","target","value","state","fetch","then","response","json","this","filterRobots","filter","robot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAceA,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,GACvB,OACA,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,QAAQC,OAAO,QAAQC,MAAM,UACjF,gCACA,6BAAKP,IACL,4BAAIC,WCUGO,EAfA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACb,OACI,gCACKA,EAAOC,KAAI,SAACC,EAAKC,GAClB,OACI,cAACC,EAAD,CACAX,GAAIO,EAAOG,GAAGV,GACdF,KAAMS,EAAOG,GAAGZ,KAChBC,MAAOQ,EAAOG,GAAGX,OAHNW,MAHnB,UCSOE,EAZC,SAAC,GAAgC,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC5B,OACI,qBAAKb,UAAU,MAAf,SACI,uBACAA,UAAU,oCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCAPI,EAPA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAS,SAAUC,OAAO,kBAAmBlB,OAAO,SAAjE,SACKe,EAAMI,YC0CJC,G,wDAvCX,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACd,YAAaa,EAAME,OAAOC,SAdrC,EAAKC,MAAM,CACXvB,OAAQ,GACRM,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,OACfkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAvB,GAAO,EAAKkB,SAAS,CAACpB,OAAQE,S,oBAWxC,WACI,MAA0B0B,KAAKL,MAAzBvB,EAAN,EAAMA,OAAOM,EAAb,EAAaA,YACPuB,EAAa7B,EAAO8B,QAAO,SAAAC,GAC7B,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAS3B,EAAY0B,kBAExD,OACG,sBAAKtC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWa,aAAcqB,KAAKV,iBAC9B,cAAC,EAAD,UACG,cAAC,EAAD,CAAUlB,OAAQ6B,a,GAjCnBK,cCKHC,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1eb570a4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst card = ({name, email,id}) =>{\r\n    return(\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n        <img src={`https://robohash.org/${id}?200x100`} alt=\"robot\" height=\"250px\" width=\"250px\"></img>\r\n        <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Cardlist=({robots})=>{\r\n    return(\r\n        <div>{\r\n             robots.map((user,i)=>{\r\n            return ( \r\n                <Card key={i} \r\n                id={robots[i].id}\r\n                name={robots[i].name} \r\n                email={robots[i].email}/>\r\n                );\r\n         })\r\n   }   </div>\r\n    );\r\n}\r\n\r\nexport default Cardlist;","import React from \"react\";\r\n\r\nconst Searchbox=({ searchfield, searchchange })=>{\r\n    return(\r\n        <div className=\"pa2\"> \r\n            <input\r\n            className=\"pa3 ba b--green  bg-lightest-blue\"\r\n            type=\"search\" \r\n            placeholder=\"Search Robots\"\r\n            onChange={searchchange}/>\r\n        \r\n        </div>\r\n    );\r\n}\r\nexport default Searchbox;","import React from \"react\";\r\n\r\nconst Scroll = (props)=>{\r\n    return (\r\n        <div style={{overflow:'scroll', border:\"5px solid black\", height:\"600px\"}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default Scroll;","import React,{Component} from \"react\";\r\nimport Cardlist from \"./Cardlist\";\r\nimport Searchbox from \"./Searchbox\";\r\nimport Scroll from \"./Scroll\";\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n            this.state={\r\n            robots: [],\r\n            searchfield:''\r\n            }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(user=>{this.setState({robots: user})})\r\n    }\r\n\r\n\r\n    onSearchchange = (event) =>{\r\n        this.setState({searchfield: event.target.value})\r\n        \r\n       \r\n    }\r\n\r\n  \r\n    render(){\r\n        const{robots,searchfield}=this.state;\r\n        const filterRobots=robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n         return(\r\n            <div className=\"tc\">\r\n                <h1 className=\"f1\">RoboFriends</h1>\r\n                <Searchbox searchchange={this.onSearchchange}/>\r\n                <Scroll>\r\n                   <Cardlist robots={filterRobots}/>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// eslint-disable-next-line\nimport index from './index.css'\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}